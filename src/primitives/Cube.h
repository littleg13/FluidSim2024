#include <d3d12.h>
#include <vector>
#include <wrl.h>

#include "util/3DMath.h"

class Cube
{
public:
    struct alignas(Math::Vec4) Vertex
    {
        Math::Vec4 Position;
        Math::Vec4 Normal;
    };

    inline static const std::vector<Vertex> Vertices = {
        {{-1.0f, -1.0f, -1.0f}, {0, 0, -1.0f, 0}}, // 0
        {{-1.0f, 1.0f, -1.0f}, {0, 0, -1.0f, 0}},  // 1
        {{1.0f, 1.0f, -1.0f}, {0, 0, -1.0f, 0}},   // 2
        {{1.0f, -1.0f, -1.0f}, {0, 0, -1.0f, 0}},  // 3
        {{-1.0f, -1.0f, 1.0f}, {0, 0, 1.0f, 0}},   // 4
        {{-1.0f, 1.0f, 1.0f}, {0, 0, 1.0f, 0}},    // 5
        {{1.0f, 1.0f, 1.0f}, {0, 0, 1.0f, 0}},     // 6
        {{1.0f, -1.0f, 1.0f}, {0, 0, 1.0f, 0}},    // 7
        {{-1.0f, -1.0f, 1.0f}, {-1.0f, 0, 0, 0}},  // 8
        {{-1.0f, 1.0f, 1.0f}, {-1.0f, 0, 0, 0}},   // 9
        {{-1.0f, 1.0f, -1.0f}, {-1.0f, 0, 0, 0}},  // 10
        {{-1.0f, -1.0f, -1.0f}, {-1.0f, 0, 0, 0}}, // 11
        {{1.0f, -1.0f, -1.0f}, {1.0f, 0, 0, 0}},   // 12
        {{1.0f, 1.0f, -1.0f}, {1.0f, 0, 0, 0}},    // 13
        {{1.0f, 1.0f, 1.0f}, {1.0f, 0, 0, 0}},     // 14
        {{1.0f, -1.0f, 1.0f}, {1.0f, 0, 0, 0}},    // 15
        {{-1.0f, 1.0f, -1.0f}, {0, 1.0f, 0, 0}},   // 16
        {{-1.0f, 1.0f, 1.0f}, {0, 1.0f, 0, 0}},    // 17
        {{1.0f, 1.0f, 1.0f}, {0, 1.0f, 0, 0}},     // 18
        {{1.0f, 1.0f, -1.0f}, {0, 1.0f, 0, 0}},    // 19
        {{-1.0f, -1.0f, 1.0f}, {0, -1.0f, 0, 0}},  // 20
        {{-1.0f, -1.0f, -1.0f}, {0, -1.0f, 0, 0}}, // 21
        {{1.0f, -1.0f, -1.0f}, {0, -1.0f, 0, 0}},  // 22
        {{1.0f, -1.0f, 1.0f}, {0, -1.0f, 0, 0}},   // 23
    };

    inline static std::vector<uint32_t> Indices{
        0, 1, 2, 0, 2, 3,        // -Z
        4, 6, 5, 4, 7, 6,        // Z
        8, 9, 10, 8, 10, 11,     // -X
        12, 13, 14, 12, 14, 15,  // X
        16, 17, 18, 16, 18, 19,  // -Y
        20, 21, 22, 20, 22, 23}; // Y

    inline static Microsoft::WRL::ComPtr<ID3D12Resource> VertexBuffer;
    inline static Microsoft::WRL::ComPtr<ID3D12Resource> IndexBuffer;
    inline static int RefCount = 0;
};